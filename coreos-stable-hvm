{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CoreOS on EC2: http://coreos.com/docs/running-coreos/cloud-providers/ec2/",
    "Mappings" : {
        "RegionMap" : {

            "eu-central-1" : {
                "AMI" : "ami-eec6f0f3"
            },

            "ap-northeast-1" : {
                "AMI" : "ami-838eb882"
            },

            "sa-east-1" : {
                "AMI" : "ami-75922668"
            },

            "ap-southeast-2" : {
                "AMI" : "ami-1dabc627"
            },

            "ap-southeast-1" : {
                "AMI" : "ami-7878592a"
            },

            "us-east-1" : {
                "AMI" : "ami-d878c3b0"
            },

            "us-west-2" : {
                "AMI" : "ami-f52c63c5"
            },

            "us-west-1" : {
                "AMI" : "ami-856772c0"
            },

            "eu-west-1" : {
                "AMI" : "ami-58e14e2f"
            }

        }
    },
    "Parameters": {
        "InstanceType" : {
            "Description" : "EC2 HVM instance type (m3.medium, etc).",
            "Type" : "String",
            "Default" : "t2.micro",
            "AllowedValues" : [ "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c3.large","c3.xlarge", "c3.2xlarge", "c3.4xlarge","c3.8xlarge", "cc2.8xlarge","cr1.8xlarge","hi1.4xlarge", "hs1.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge","r3.4xlarge", "r3.8xlarge", "t2.micro", "t2.small", "t2.medium" ],
            "ConstraintDescription" : "Must be a valid EC2 HVM instance type."
        },
        "ClusterSize": {
            "Default": "5",
            "MinValue": "3",
            "MaxValue": "12",
            "Description": "Number of nodes in cluster (3-12).",
            "Type": "Number"
        },
        "DiscoveryURL": {
            "Description": "An unique etcd cluster discovery URL. Grab a new token from https://discovery.etcd.io/new",
            "Type": "String"
        },
        "AdvertisedIPAddress": {
            "Description": "Use 'private' if your etcd cluster is within one region or 'public' if it spans regions or cloud providers.",
            "Default": "private",
            "AllowedValues": ["private", "public"],
            "Type": "String"
        },
        "AllowSSHFrom": {
            "Description": "The net block (CIDR) that SSH is available to.",
            "Default": "0.0.0.0/0",
            "Type": "String"
        },
        "KeyPair" : {
            "Description" : "The name of an EC2 Key Pair to allow SSH access to the instance.",
            "Type" : "String"
        }
    },
    "Resources": {
        "CoreOSSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "CoreOS SecurityGroup",
                "SecurityGroupIngress": [
                    {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": {"Ref": "AllowSSHFrom"}}
                ]
            }
        },
        "Ingress4001": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupName": {"Ref": "CoreOSSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "4001", "ToPort": "4001", "SourceSecurityGroupId": {
                    "Fn::GetAtt" : [ "CoreOSSecurityGroup", "GroupId" ]
                }
            }
        },
        "Ingress80": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupName": {"Ref": "CoreOSSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "SourceSecurityGroupId": {
                    "Fn::GetAtt" : [ "CoreOSSecurityGroup", "GroupId" ]
                }
            }
                },
        "Ingress22": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupName": {"Ref": "CoreOSSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "SourceSecurityGroupId": {
                    "Fn::GetAtt" : [ "CoreOSSecurityGroup", "GroupId" ]
                }
            }
        },
        "Ingress7001": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupName": {"Ref": "CoreOSSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "7001", "ToPort": "7001", "SourceSecurityGroupId": {
                    "Fn::GetAtt" : [ "CoreOSSecurityGroup", "GroupId" ]
                }
            }
        },
        "Ingress5432": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupName": {"Ref": "CoreOSSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "5432", "ToPort": "5432", "SourceSecurityGroupId": {
                    "Fn::GetAtt" : [ "CoreOSSecurityGroup", "GroupId" ]
                }
            }
        },

        "CoreOSServerAutoScale": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": {"Fn::GetAZs": ""},
                "LaunchConfigurationName": {"Ref": "CoreOSServerLaunchConfig"},
                "MinSize": "3",
                "MaxSize": "12",
                "DesiredCapacity": {"Ref": "ClusterSize"},
                "Tags": [
                    {"Key": "Name", "Value": { "Ref" : "AWS::StackName" }, "PropagateAtLaunch": true}
                ]
            }
        },
        "CoreOSServerLaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
                "InstanceType": {"Ref": "InstanceType"},
                "KeyName": {"Ref": "KeyPair"},
                "SecurityGroups": [{"Ref": "CoreOSSecurityGroup"}],
                "UserData" : { "Fn::Base64":
                               { "Fn::Join": [ "", [
                                   "#cloud-config\n\n",
                                   "coreos:\n",
                                   "  etcd:\n",
                                   "    discovery: ", { "Ref": "DiscoveryURL" }, "\n",
                                   "    addr: $", { "Ref": "AdvertisedIPAddress" }, "_ipv4:4001\n",
                                   "    peer-addr: $", { "Ref": "AdvertisedIPAddress" }, "_ipv4:7001\n",
                                   "  units:\n",
                                   "    - name: etcd.service\n",
                                   "      command: start\n",
                                   "    - name: fleet.service\n",
                                   "      command: start\n",
                                   "  fleet:\n",
                                   "    - metadata: instancetype=", {"Ref": "InstanceType"}
                               ] ]
                               }
                             }
            }
        }
    }
}
